version: '3.8'

services:
  # PostgreSQL база данных
  postgres:
    image: postgres:15-alpine
    container_name: boltaiznakomsya_postgres
    environment:
      POSTGRES_DB: boltaiznakomsya
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/database.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - boltaiznakomsya_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis для кэширования и очередей
  redis:
    image: redis:7-alpine
    container_name: boltaiznakomsya_redis
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - boltaiznakomsya_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: boltaiznakomsya_backend
    environment:
      NODE_ENV: development
      PORT: 3001
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: boltaiznakomsya
      DB_USER: postgres
      DB_PASSWORD: password
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      CORS_ORIGIN: http://188.225.45.8
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - boltaiznakomsya_network
    volumes:
      - ./backend:/app
      - /app/node_modules
    restart: unless-stopped

  # Frontend приложение
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: boltaiznakomsya_frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - boltaiznakomsya_network
    restart: unless-stopped

  # Nginx для IP адреса
  nginx:
    image: nginx:alpine
    container_name: boltaiznakomsya_nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx-ip.conf:/etc/nginx/nginx.conf
    depends_on:
      - frontend
      - backend
    networks:
      - boltaiznakomsya_network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  boltaiznakomsya_network:
    driver: bridge 